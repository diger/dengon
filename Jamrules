rule StaticLibrary {
	# StaticLibrary <lib> : <sources> : <otherObjects> ;
	local lib = $(1) ;
	local sources = [ FGristFiles $(2) ] ;
	local otherObjects = $(3) ;
	local objects = $(sources:S=$(SUFOBJ)) ;
	Objects $(2) ;
	StaticLibraryFromObjects $(lib) : $(objects) $(otherObjects) ;
}

rule StaticLibraryFromObjects { LibraryFromObjects $(1) : $(2) ; }

rule LinkAgainst {
	local lib ;
        for lib in $(2) { LINKLIBS += -Xlinker --whole-archive objects/$(lib) ; }
}

rule StdLibs {
	local lib ;
        for lib in $(2) { LINKLIBS += -l$(lib) ; }
}

rule SharedLibraryFromObjects {
	# SharedLibraryFromObjects <lib> : <objects> : <libraries> ;
	local _lib = $(1) ;
	LINKLIBS = ;
	LinkAgainst $(_lib) : $(3) ;
	LINKFLAGS on $(_lib) = [ on $(_lib) return $(LINKFLAGS) ]
	    -nostart -L. -Xlinker -soname=\"$(_lib)\" $(LINKLIBS) ;
	MainFromObjects $(_lib) : $(2) ;
}

rule SharedLibrary {
	# SharedLibrary <lib> : <sources> : <libraries> ;
	local lib = $(1) ;
	local sources = [ FGristFiles $(2) ] ;
	local objects = $(sources:S=$(SUFOBJ)) ;
	local libs = $(3) ;
	Objects $(sources) ;
	SharedLibraryFromObjects $(lib) : $(objects) : $(libs) ;
}
